server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus
feign:
  httpclient:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 10000
        readTimeout: 10000
        loggerLevel: full
    retryer:
      period: 500
      maxPeriod: 2000
      maxAttempts: 3

hearing:
  api:
    url: ${HEARING_API_URL:http://rd-commondata-api-aat.service.core-compute-aat.internal}

idam:
  s2s-auth:
    url: ${SERVICE_AUTH_PROVIDER_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
    secret: ${S2S_SECRET:Y6OORUQWPMUEM3QH}
    microservice: fis_hmc_api
  api:
    url: ${IDAM_API_BASEURL:https://idam-api.aat.platform.hmcts.net}
core_case_data:
  api:
    url: ${CASE_DATA_STORE_BASEURL:http://ccd-data-store-api-aat.service.core-compute-aat.internal}

springdoc:
  packagesToScan: uk.gov.hmcts.reform.hmc.api.controllers

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  cloud:
    azure:
      servicebus:
        connection-string: ${HMC_FIS_SERVICEBUS_CONNECTION_STRING:Endpoint=sb://demo.sKeyName=;SharedAccessKey=}
    stream:
      bindings:
        consume-in-0:
          destination: hmc-to-cft-demo
          group: hmc-fis-subscription-demo
      servicebus:
        bindings:
          consume-in-0:
            consumer:
              auto-complete: false
      function:
        definition: consume;
      poller:
        fixed-delay: 1000
        initial-delay: 0
  config:
    import: "optional:configtree:/mnt/secrets/fis/"
  application:
    name: fis_hmc_api



azure:
  application-insights:
    instrumentation-key: ${fis.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}
