buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url "https://jitpack.io"
      content {
        excludeGroup "com.github.ben-manes.versions"
      }
    }

  }
  dependencies {
    classpath "net.serenity-bdd:serenity-gradle-plugin:2.4.34"
    classpath group: 'cz.habarta.typescript-generator', name: 'typescript-generator-gradle-plugin', version: '2.37.1128'
  }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.7.18'
  id 'org.owasp.dependencycheck' version '8.0.2'
  id 'com.github.ben-manes.versions' version '0.44.0'
  id 'org.sonarqube' version '3.3'
  id 'idea'
  id 'hmcts.ccd.sdk' version '0.25.16'
  id 'au.com.dius.pact' version '4.1.7'
  id 'info.solidsoft.pitest' version '1.7.4'
}

def versions = [
  gradlePitest                 : '1.4.5',
  pitest                       : '1.7.3',
  sonarPitest                  : '0.5',
]


apply plugin: 'cz.habarta.typescript-generator'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom testRuntime

  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntimeOnly.extendsFrom testRuntime

  smokeTestImplementation.extendsFrom testImplementation
  smokeTestRuntime.extendsFrom testRuntime
  smokeTestCompile.extendsFrom testCompile

  contractTestImplementation.extendsFrom testImplementation
  contractTestRuntime.extendsFrom testRuntime
  contractTestCompile.extendsFrom testCompile
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
  useJUnitPlatform()
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  finalizedBy(aggregate)
  failFast = true
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  setTestClassesDirs(sourceSets.smokeTest.output.classesDirs)
  setClasspath(sourceSets.smokeTest.runtimeClasspath)
  include "uk/gov/hmcts/reform/hmc/api/**"
  failFast = true
}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

checkstyle {
  maxWarnings = 0
  toolVersion = '9.3'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.41.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

pitest {
  targetClasses = ['uk.gov.hmcts.reform.hmc.api.*']
  excludedClasses = [
    'uk.gov.hmcts.reform.hmc.api.config.*',
    'uk.gov.hmcts.reform.hmc.api.model.*',
    'uk.gov.hmcts.reform.hmc.api.enums.*',
    'uk.gov.hmcts.reform.hmc.api.Application.*',
  ]
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = true
  mutationThreshold = 80
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

jacoco {
  toolVersion = "0.8.12"
}

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 0.0
      }
    }
  }
}

tasks.withType(Copy).all { duplicatesStrategy 'exclude' }

project.tasks['sonarqube'].dependsOn jacocoTestReport
project.tasks['check'].dependsOn integration

def sonarExclusions = [
  '**/uk/gov/hmcts/reform/hmc/api/config/**',
  '**/uk/gov/hmcts/reform/hmc/api/model/**',
  '**/uk/gov/hmcts/reform/hmc/api/exceptions/**',
  '**/uk/gov/hmcts/reform/hmc/api/enums/**',
  '**/uk/gov/hmcts/reform/hmc/api/services/**',
  '**/uk/gov/hmcts/reform/hmc/api/mapper/**',
  '**/uk/gov/hmcts/reform/hmc/api/restclient/**'
]

sonarqube {
  properties {
    property "sonar.projectName", "fis :: fis-hmc-api"
    property "sonar.projectKey", "uk.gov.hmcts.reform:fis-hmc-api"
    property "sonar.exclusions", sonarExclusions.join(', ')
    property "sonar.coverage.exclusions", sonarExclusions.join(', ')
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'config/owasp/suppressions.xml'
  outputDirectory = 'build/reports/'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
  skipConfigurations = [
    "checkstyle",
    "compileOnly",
    "pmd",
    "integrationTest",
    "functionalTest",
    "smokeTest",
    "contractTestRuntimeClasspath",
    "contractTestCompileClasspath"
  ]
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
  jcenter()
}

ext {
  log4JVersion = '2.20.0'
  set('springCloudAzureVersion', "4.18.0")
  set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
  imports {
    mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
  }
  dependencies {
    dependencySet(
      group: 'com.fasterxml.jackson.core',
      version: '2.17.1'
    ) {
      entry 'jackson-core'
      entry 'jackson-databind'
    }
    dependencySet(
      group: 'com.fasterxml.jackson.datatype',
      version: '2.17.1'
    ) {
      entry 'jackson-datatype-jdk8'
      entry 'jackson-datatype-jsr310'
    }
    dependencySet(
      group: 'com.fasterxml.jackson.module',
      version: '2.17.1'
    ) {
      entry 'jackson-module-parameter-names'
    }
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
    // CVE-2018-10237 - Unbounded memory allocation
    // CVE-2023-2976 fix
    dependencySet(group: 'com.google.guava', version: '32.1.3-jre') {
      entry 'guava'
    }
    dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.89') {
      entry 'tomcat-embed-core'
      entry 'tomcat-embed-el'
      entry 'tomcat-embed-websocket'
    }
    dependencySet(group: 'xerces', version: '2.12.2') {
      entry 'xercesImpl'
    }
    dependencySet(group: 'io.netty', version: '4.1.109.Final') {
      entry 'netty-buffer'
      entry 'netty-codec'
      entry 'netty-codec-dns'
      entry 'netty-codec-http'
      entry 'netty-codec-http2'
      entry 'netty-codec-socks'
      entry 'netty-common'
      entry 'netty-handler'
      entry 'netty-handler-proxy'
      entry 'netty-resolver'
      entry 'netty-resolver-dns'
      entry 'netty-resolver-dns-classes-macos'
      entry 'netty-resolver-dns-native-macos'
      entry 'netty-transport'
      entry 'netty-transport-classes-epoll'
      entry 'netty-transport-classes-kqueue'
      entry 'netty-transport-native-epoll'
      entry 'netty-transport-native-kqueue'
      entry 'netty-transport-native-unix-common'
    }
    dependencySet(group: 'commons-fileupload', version: '1.5') {
      entry 'commons-fileupload'
    }
    dependencySet(group: 'io.projectreactor.netty', version: '1.1.18') {
      entry 'reactor-netty'
      entry 'reactor-netty-http'
    }
    dependencySet(group: 'org.json', version: '20240303') {
      entry 'json'
    }
    dependencySet(group: 'org.springframework', version: '5.3.34') {
      entry 'spring-aop'
      entry 'spring-beans'
      entry 'spring-context'
      entry 'spring-core'
      entry 'spring-expression'
      entry 'spring-jcl'
      entry 'spring-webmvc'
      entry 'spring-web'
    }
    dependencySet(group: 'commons-io', version: '2.14.0') {
      entry 'commons-io'
    }
    dependency group: 'org.yaml',name: 'snakeyaml', version: '2.0'
    //CVE-2023-34034
    dependency group: 'org.springframework.security', name: 'spring-security-crypto', version: '6.2.4'
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
    dependencySet(group: 'org.apache.commons', version: '1.26.1') {
      entry 'commons-compress'
    }
    dependencySet(group: 'io.ktor', version: '2.3.10') {
      entry 'ktor-network-tls-jvm'
    }

    // CVE-2021-27568, CVE-2023-1370
    dependencySet(group: 'com.nimbusds', version: '9.37.3') {
      entry 'nimbus-jose-jwt'
    }

    dependencySet(group: 'ch.qos.logback', version: '1.2.13') {
      entry 'logback-classic'
      entry 'logback-core'
    }
    dependencySet(group: 'io.grpc', version: '1.62.2') {
      entry 'grpc-api'
      entry 'grpc-context'
      entry 'grpc-core'
      entry 'grpc-netty'
      entry 'grpc-protobuf'
      entry 'grpc-protobuf-lite'
      entry 'grpc-stub'

    }
    dependencySet(group: 'com.nimbusds', version: '9.37.3') {
      entry 'nimbus-jose-jwt'
    }
    //CVE-2023-3635
    dependencySet(group: 'com.squareup.okio', version: '3.9.0') {
      entry 'okio-jvm'
    }
    dependency group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.7.10'
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
    dependency group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0'
  }
}
dependencies {
  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.8'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.18'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.7.18'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
  implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.11.0'
  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '6.3.0'

  implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.0')
  implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0')
  implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.17.1')
  implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4JVersion
  implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4JVersion
  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '11.10'
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.9'
  implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
  implementation group: 'io.springfox', name: 'springfox-spring-webflux', version: '3.0.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '4.0.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'idam-client', version: '2.0.0'
  implementation group: 'com.github.hmcts', name: 'ccd-client', version: '4.9.2'
  implementation group: 'com.azure', name: 'azure-core', version: '1.48.0'
  implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.16.0'
  implementation group: 'com.microsoft.azure', name: 'azure-servicebus', version: '3.6.7'
  implementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.6.9'
  implementation group: 'au.com.dius.pact.consumer', name: 'java8', version: '4.1.42'
  implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.89'
  implementation group: 'org.apache.tika', name: 'tika-core', version: '2.9.2'
  implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '2.1.1'

  implementation 'org.projectlombok:lombok:1.18.32'
  annotationProcessor 'org.projectlombok:lombok:1.18.32'

  testRuntimeOnly "org.junit.platform:junit-platform-commons:1.8.2"

  testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
  contractTestImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
  contractTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
  testImplementation 'org.apiguardian:apiguardian-api:1.0.0'
  contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.8.2')

  contractTestImplementation sourceSets.main.runtimeClasspath
  contractTestImplementation sourceSets.test.runtimeClasspath

  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: '2.6.0'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.6.0'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: '2.6.0'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: '2.6.0'

  testImplementation 'com.github.hmcts:fortify-client:1.2.2:all'
  testImplementation 'org.projectlombok:lombok:1.18.32'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
  implementation group: 'io.rest-assured', name: 'rest-assured'
  implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
  testImplementation(platform('org.junit:junit-bom:5.8.2'))
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }

  implementation group: 'org.pitest', name: 'pitest', version: versions.pitest
  implementation group:'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: versions.gradlePitest
  implementation group:'org.codehaus.sonar-plugins', name:'sonar-pitest-plugin', version: versions.sonarPitest

}

mainClassName = 'uk.gov.hmcts.reform.hmc.api.Application'

bootJar {
  getArchiveFileName().set(provider {
    'fis-hmc-api.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
